name: KV Usage Check

# ROADMAP V4: Schedule check at 07:30 UTC daily
# Fails if totalOps >= 90000 (90% of 100k limit)
on:
  schedule:
    - cron: '30 7 * * *'  # 07:30 UTC daily
  workflow_dispatch:  # Allow manual trigger

jobs:
  check-kv-usage:
    runs-on: ubuntu-latest
    name: Check KV Operations Usage
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check KV Usage
        id: kv-check
        run: |
          # Check KV usage via health endpoint
          HEALTH_URL="${{ secrets.HEALTH_ENDPOINT_URL || 'https://alfalyzer.vercel.app' }}/api/health/kv"
          
          echo "Checking KV usage at: $HEALTH_URL"
          
          # Make request to health endpoint
          RESPONSE=$(curl -s -w "HTTP_STATUS:%{http_code}" "$HEALTH_URL")
          HTTP_STATUS=$(echo "$RESPONSE" | sed -n 's/.*HTTP_STATUS:\([0-9]*\)/\1/p')
          BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')
          
          echo "HTTP Status: $HTTP_STATUS"
          echo "Response Body: $BODY"
          
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "❌ Health endpoint returned status $HTTP_STATUS"
            exit 1
          fi
          
          # Parse JSON response to get totalOps
          TOTAL_OPS=$(echo "$BODY" | jq -r '.totalOps // 0')
          LIMIT_OPS=$(echo "$BODY" | jq -r '.limitOps // 100000')
          
          echo "Total Operations: $TOTAL_OPS"
          echo "Limit Operations: $LIMIT_OPS"
          
          # Calculate percentage
          PERCENTAGE=$(echo "scale=2; $TOTAL_OPS * 100 / $LIMIT_OPS" | bc)
          echo "Usage Percentage: $PERCENTAGE%"
          
          # Set outputs for other steps
          echo "total_ops=$TOTAL_OPS" >> $GITHUB_OUTPUT
          echo "limit_ops=$LIMIT_OPS" >> $GITHUB_OUTPUT
          echo "percentage=$PERCENTAGE" >> $GITHUB_OUTPUT
          
          # ROADMAP V4: Fail if totalOps >= 90000 (90% of limit)
          THRESHOLD=90000
          if [ "$TOTAL_OPS" -ge "$THRESHOLD" ]; then
            echo "🚨 KV USAGE CRITICAL: $TOTAL_OPS operations (≥ $THRESHOLD threshold)"
            echo "::error::KV usage has reached critical threshold: $TOTAL_OPS/$LIMIT_OPS operations ($PERCENTAGE%)"
            exit 1
          elif [ "$TOTAL_OPS" -ge 80000 ]; then
            echo "⚠️ KV USAGE WARNING: $TOTAL_OPS operations (≥ 80% threshold)"
            echo "::warning::KV usage approaching limit: $TOTAL_OPS/$LIMIT_OPS operations ($PERCENTAGE%)"
          else
            echo "✅ KV USAGE HEALTHY: $TOTAL_OPS operations ($PERCENTAGE% of limit)"
          fi
          
      - name: Notify on Slack (if configured)
        if: failure() && secrets.SLACK_WEBHOOK_URL
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "🚨 KV Usage Critical Alert", 
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*KV Usage Alert* 🚨\n\n*Status:* Critical\n*Usage:* ${{ steps.kv-check.outputs.total_ops }}/${{ steps.kv-check.outputs.limit_ops }} operations\n*Percentage:* ${{ steps.kv-check.outputs.percentage }}%\n*Threshold:* 90% (90,000 ops)\n\n*Action Required:* Consider optimizing KV operations or upgrading plan."
                  }
                }
              ]
            }' \
            "${{ secrets.SLACK_WEBHOOK_URL }}"
            
      - name: Create Issue on Critical Usage
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const totalOps = '${{ steps.kv-check.outputs.total_ops }}';
            const limitOps = '${{ steps.kv-check.outputs.limit_ops }}';
            const percentage = '${{ steps.kv-check.outputs.percentage }}';
            
            const title = `🚨 KV Usage Critical: ${totalOps}/${limitOps} operations (${percentage}%)`;
            const body = `## KV Usage Alert
            
            **Status:** 🚨 Critical
            **Current Usage:** ${totalOps}/${limitOps} operations
            **Percentage:** ${percentage}%
            **Threshold:** 90% (90,000 operations)
            **Check Time:** ${new Date().toISOString()}
            
            ## Recommended Actions
            
            1. **Immediate:**
               - Review and optimize KV operations
               - Consider implementing additional caching layers
               - Temporarily reduce non-essential KV operations
            
            2. **Short-term:**
               - Analyze KV usage patterns
               - Implement request batching where possible
               - Consider upgrading to higher tier plan
            
            3. **Long-term:**
               - Implement KV operation monitoring and alerting
               - Design more efficient data access patterns
               - Consider alternative storage solutions for high-volume data
            
            ## Monitoring
            
            Check current KV usage: [Health Endpoint](https://alfalyzer.vercel.app/api/health/kv)
            
            ---
            *This issue was automatically created by the KV Usage Check workflow.*`;
            
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['kv-usage', 'critical'],
              state: 'open'
            });
            
            // Only create issue if one doesn't already exist
            if (issues.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['kv-usage', 'critical', 'automated']
              });
            } else {
              console.log('KV usage critical issue already exists, skipping creation');
            }
            
      - name: Update Status Badge
        if: always()
        run: |
          # Create or update status badge
          STATUS="healthy"
          COLOR="brightgreen"
          
          if [ "${{ steps.kv-check.outputs.total_ops }}" -ge 90000 ]; then
            STATUS="critical"
            COLOR="red"
          elif [ "${{ steps.kv-check.outputs.total_ops }}" -ge 80000 ]; then
            STATUS="warning" 
            COLOR="yellow"
          fi
          
          BADGE_URL="https://img.shields.io/badge/KV%20Usage-${{ steps.kv-check.outputs.percentage }}%25%20($STATUS)-$COLOR"
          echo "Badge URL: $BADGE_URL"
          
          # Save badge info for potential use
          echo "kv_status=$STATUS" >> $GITHUB_ENV
          echo "kv_badge_url=$BADGE_URL" >> $GITHUB_ENV